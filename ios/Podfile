$RNFirebaseAsStaticFramework = true
# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, '13.4'
install! 'cocoapods', :deterministic_uuids => false

target 'MurrayDeskBooking' do
  project 'MurrayDeskBooking',
        'Debug-Dev' => :debug,
        'Debug-Production' => :debug,
        'Release-Dev' => :release,
        'Release-Production' => :release
  use_frameworks! :linkage => :static
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    # :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'MurrayDeskBookingTests' do
    inherit! :complete
    # Pods for testing
  end

  ENVFILES = {
    'Debug-Dev' => '$(PODS_ROOT)/../../.env.development',
    'Debug-Production' => '$(PODS_ROOT)/../../.env.production',
    'Release-Dev' => '$(PODS_ROOT)/../../.env.development',
    'Release-Production' => '$(PODS_ROOT)/../../.env.production',
  }

  post_install do |installer|
    installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
          if target.name == 'react-native-config'
            config.build_settings['ENVFILE'] = ENVFILES[config.name]
          end

          if target.name == 'BoringSSL-GRPC'
            target.source_build_phase.files.each do |file|
              if file.settings && file.settings['COMPILER_FLAGS']
                flags = file.settings['COMPILER_FLAGS'].split
                flags.reject! { |flag| flag == '-GCC_WARN_INHIBIT_ALL_WARNINGS' }
                file.settings['COMPILER_FLAGS'] = flags.join(' ')
              end
            end
          end
          # On Xcode 15.0.1 you get this error:
          # "No template named 'unary_function' in namespace 'std'; did you mean '__unary_function'?"
          # Adding this fixes it, as per https://stackoverflow.com/a/77136535
          target.build_configurations.each do |config|
            config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', '_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION']
          end
        end
      end
    react_native_post_install(
      installer,
      :mac_catalyst_enabled => false
    )
  end
end
